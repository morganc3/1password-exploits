// Generated by Apple Swift version 3.0.2 (swiftlang-800.0.63 clang-800.0.42.1)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if defined(__has_attribute) && __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if defined(__has_feature) && __has_feature(modules)
@import AppKit;
@import Foundation;
@import CoreGraphics;
@import OnePasswordCommon;
@import WebKit;
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
@class NSCoder;

SWIFT_CLASS("_TtC13OnePasswordUI33OPIntrinsicContentSizeBackingView")
@interface OPIntrinsicContentSizeBackingView : NSView
- (void)updateConstraints;
- (void)setContentSize:(NSSize)contentSize animated:(BOOL)animated;
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13OnePasswordUI51OPAccessibilityGroupIntrinsicContentSizeBackingView")
@interface OPAccessibilityGroupIntrinsicContentSizeBackingView : OPIntrinsicContentSizeBackingView <NSAccessibilityGroup>
@property (nonatomic, copy) NSString * _Nullable accessibilityGroupLabel;
- (NSString * _Nullable)accessibilityLabel;
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP13OnePasswordUI41OPAnimatedSplitViewExternalActionDelegate_")
@protocol OPAnimatedSplitViewExternalActionDelegate
@optional
- (BOOL)shouldPerformExternalAction:(id _Nonnull)action;
@required
- (void)performExternalAction:(id _Nonnull)action;
@end

@class OPImageBackgroundView;
@class NSLayoutConstraint;
@class NSWindow;

SWIFT_CLASS("_TtC13OnePasswordUI31OPAnimatedSplitWindowController")
@interface OPAnimatedSplitWindowController : NSWindowController
+ (void)swapContentBackingViewOf:(NSView * _Nonnull)childView with:(OPIntrinsicContentSizeBackingView * _Nonnull)newContentBackingView;
@property (nonatomic, weak) id <OPAnimatedSplitViewExternalActionDelegate> _Nullable externalActionDelegate;
@property (nonatomic, weak) IBOutlet OPAccessibilityGroupIntrinsicContentSizeBackingView * _Null_unspecified rightContentBackingView;
@property (nonatomic, weak) IBOutlet OPAccessibilityGroupIntrinsicContentSizeBackingView * _Null_unspecified leftContentBackingView;
@property (nonatomic, weak) IBOutlet OPImageBackgroundView * _Null_unspecified leftImageBackgroundView;
@property (nonatomic, weak) IBOutlet OPImageBackgroundView * _Null_unspecified rightImageBackgroundView;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified leftViewLeadingConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified leftViewTrailingConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified rightViewLeadingConstraint;
@property (nonatomic, weak) IBOutlet NSLayoutConstraint * _Null_unspecified rightViewTrailingConstraint;
- (void)windowDidLoad;
- (nonnull instancetype)initWithWindow:(NSWindow * _Nullable)window OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC13OnePasswordUI36OPAnimatedTransitionWindowController")
@interface OPAnimatedTransitionWindowController : NSWindowController
- (nonnull instancetype)initWithWindow:(NSWindow * _Nullable)window OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class B5ServerWebSessionInitialization;
@class B5UserAccount;
@class WKWebView;
@class WKNavigation;
@class WKNavigationAction;
@class WKFrameInfo;
@class OPAuthenticatedWebView;
@protocol OPAuthenticatedWebViewControllerDelegate;
@class NSBundle;

SWIFT_CLASS("_TtC13OnePasswordUI32OPAuthenticatedWebViewController")
@interface OPAuthenticatedWebViewController : NSViewController <OPAuthenticatedWebViewDelegate, WKNavigationDelegate, WKUIDelegate>
@property (nonatomic, weak) id <OPAuthenticatedWebViewControllerDelegate> _Nullable delegate;
@property (nonatomic, strong) B5ServerWebSessionInitialization * _Nullable webSessionInitialization;
- (nonnull instancetype)initWithUrlRequest:(NSURLRequest * _Nullable)urlRequest;
- (nonnull instancetype)initWithUserAccount:(B5UserAccount * _Nonnull)userAccount relativeURLComponent:(NSString * _Nonnull)relativeURLComponent webSessionInitialization:(B5ServerWebSessionInitialization * _Nonnull)webSessionInitialization;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)loadView;
- (void)startLoading;
- (void)registerForEventWithName:(NSString * _Nonnull)name;
- (void)webView:(WKWebView * _Nonnull)webView didFinishNavigation:(WKNavigation * _Null_unspecified)navigation;
- (void)webView:(WKWebView * _Nonnull)webView didFailNavigation:(WKNavigation * _Null_unspecified)navigation withError:(NSError * _Nonnull)error;
- (void)webView:(WKWebView * _Nonnull)webView decidePolicyForNavigationAction:(WKNavigationAction * _Nonnull)navigationAction decisionHandler:(void (^ _Nonnull)(WKNavigationActionPolicy))decisionHandler;
- (void)webView:(WKWebView * _Nonnull)webView runJavaScriptAlertPanelWithMessage:(NSString * _Nonnull)message initiatedByFrame:(WKFrameInfo * _Nonnull)frame completionHandler:(void (^ _Nonnull)(void))completionHandler;
- (void)webView:(OPAuthenticatedWebView * _Nullable)webView receivedEventNamed:(NSString * _Nonnull)name payload:(id _Nullable)payload;
- (void)webView:(OPAuthenticatedWebView * _Nullable)webView handleLoginDictionary:(NSDictionary * _Nullable)loginDictionary;
- (nullable instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL("_TtP13OnePasswordUI40OPAuthenticatedWebViewControllerDelegate_")
@protocol OPAuthenticatedWebViewControllerDelegate <NSObject>
@optional
- (BOOL)webViewControllerShouldIncludeUserAgent:(OPAuthenticatedWebViewController * _Nonnull)controller;
- (void)webViewController:(OPAuthenticatedWebViewController * _Nonnull)controller openURL:(NSURL * _Nonnull)url;
- (void)webViewController:(OPAuthenticatedWebViewController * _Nonnull)controller receivedEventNamed:(NSString * _Nonnull)name payload:(id _Nullable)payload;
- (void)webViewControllerStartedLoading:(OPAuthenticatedWebViewController * _Nonnull)controller;
- (void)webViewController:(OPAuthenticatedWebViewController * _Nonnull)controller finishedLoading:(BOOL)success error:(NSError * _Nullable)error;
- (void)webViewController:(OPAuthenticatedWebViewController * _Nonnull)controller handleLoginDictionary:(NSDictionary * _Nullable)loginDictionary;
@end

@class NSImage;
@class NSColor;

SWIFT_CLASS("_TtC13OnePasswordUI21OPImageBackgroundView")
@interface OPImageBackgroundView : NSView
@property (nonatomic, strong) NSImage * _Nullable image;
@property (nonatomic, strong) NSColor * _Nullable color;
@property (nonatomic, copy) NSRect (^ _Nullable imagePositionHandler)(OPImageBackgroundView * _Nonnull);
- (void)drawRect:(NSRect)dirtyRect;
@property (nonatomic, readonly) BOOL isOpaque;
@property (nonatomic, readonly) BOOL mouseDownCanMoveWindow;
- (nonnull instancetype)initWithFrame:(NSRect)frameRect OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end



SWIFT_CLASS("_TtC13OnePasswordUI23OPModalWindowController")
@interface OPModalWindowController : OPAnimatedTransitionWindowController
- (void)windowDidLoad;
- (NSModalResponse)runModal;
- (nonnull instancetype)initWithWindow:(NSWindow * _Nullable)window OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class NSFont;
@class NSString;
@class NSNumber;

SWIFT_CLASS("_TtC13OnePasswordUI23OPScrubberItemTitleView")
@interface OPScrubberItemTitleView : NSScrubberItemView
@property (nonatomic, copy) NSString * _Nullable title;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSFont * _Nonnull font;)
+ (NSFont * _Nonnull)font;
+ (NSSize)sizeForTitle:(NSString * _Nonnull)title;
+ (NSSize)sizeForItemWithTitle:(NSString * _Nonnull)title layoutMetrics:(NSDictionary<NSString *, NSNumber *> * _Nullable)layoutMetrics;
- (void)ag_commonInit;
- (nonnull instancetype)initWithFrame:(NSRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@protocol OPImageDataOperationMonitor;

SWIFT_CLASS("_TtC13OnePasswordUI18OPScrubberItemView")
@interface OPScrubberItemView : NSScrubberItemView
@property (nonatomic, readonly, strong) NSNumber * _Nonnull imageHeight;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull imageWidth;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull imageToTextPadding;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull leftPadding;
@property (nonatomic, readonly, strong) NSNumber * _Nonnull rightPadding;
@property (nonatomic, copy) NSDictionary<NSString *, NSNumber *> * _Nullable layoutMetrics;
@property (nonatomic, strong) id <OPImageDataOperationMonitor> _Nullable dataMonitor;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic, strong) NSImage * _Nullable image;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) NSFont * _Nonnull font;)
+ (NSFont * _Nonnull)font;
@property (nonatomic, readonly, strong) NSColor * _Nonnull backgroundColor;
@property (nonatomic, readonly, strong) NSColor * _Nonnull highlightedBackgroundColor;
+ (NSSize)sizeForTitle:(NSString * _Nonnull)title;
+ (NSSize)sizeForItemWithTitle:(NSString * _Nonnull)title layoutMetrics:(NSDictionary<NSString *, NSNumber *> * _Nonnull)layoutMetrics;
- (void)updateConstraints;
- (void)ag_commonInit;
- (void)drawRect:(NSRect)dirtyRect;
- (nonnull instancetype)initWithFrame:(NSRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

#pragma clang diagnostic pop
